<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2WJbYcP/2Q==
</value>
  </data>
</root>